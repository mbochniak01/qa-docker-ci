name: QA Docker CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1, 2, 3]  # number of parallel shards
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t qa-test .

      - name: Run tests in parallel shard ${{ matrix.shard }}
        run: |
          mkdir -p tmp/allure-results/shard-${{ matrix.shard }}
          docker run --rm \
            -e PYTEST_XDIST_WORKER="gw${{ matrix.shard }}" \
            -v "${{ github.workspace }}/tmp/allure-results/shard-${{ matrix.shard }}:/usr/src/app/allure-results/$PYTEST_XDIST_WORKER" \
            qa-test || true

  merge-and-upload:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      allure_found: ${{ steps.merge-allure.outputs.allure_found }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Merge Allure shards
        id: merge-allure
        run: |
          mkdir -p tmp/allure-merged
          if [ -d tmp/allure-results ]; then
            for shard in tmp/allure-results/*; do
              if [ -d "$shard" ]; then
                cp -r "$shard"/* tmp/allure-merged/
              fi
            done
          fi

          if [ "$(ls -A tmp/allure-merged)" ]; then
            echo "allure_found=true" >> $GITHUB_OUTPUT
          else
            echo "allure_found=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload Allure Results Raw
        if: needs.merge-and-upload.outputs.allure_found == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: tmp/allure-merged

      - name: Generate Allure report
        if: needs.merge-and-upload.outputs.allure_found == 'true'
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: tmp/allure-merged
          allure_report: allure-report
